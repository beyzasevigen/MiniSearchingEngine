/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package buraknafigirgin_beyzanursevigen_searchengine;

import java.io.*;
import java.util.HashSet;
import java.util.Set;
import javax.swing.*;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

/**
 *
 * @author Beyza Sevigen
 */
public class guiForBST extends javax.swing.JFrame {

   
    public guiForBST() {
        initComponents();

    }

    File[] selectedFiles;
    bst tree = new bst();

    public void changeTxtAreaOutput(String text) {
        txtArea_outputOrderedList.append(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea_outputOrderedList = new javax.swing.JTextArea();
        btn_preOrder = new javax.swing.JButton();
        btn_inOrder = new javax.swing.JButton();
        btn_postOrder = new javax.swing.JButton();
        txtField_searchWord = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaForSearchedWordsInfo = new javax.swing.JTextArea();
        btnFileChooser = new javax.swing.JButton();
        btnDeleteChoosenFiles = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BST Search");

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        txtArea_outputOrderedList.setColumns(20);
        txtArea_outputOrderedList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtArea_outputOrderedList.setRows(5);
        jScrollPane2.setViewportView(txtArea_outputOrderedList);

        btn_preOrder.setText("pre-order");
        btn_preOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_preOrderActionPerformed(evt);
            }
        });

        btn_inOrder.setText("in-order");
        btn_inOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inOrderActionPerformed(evt);
            }
        });

        btn_postOrder.setText("post-order");
        btn_postOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_postOrderActionPerformed(evt);
            }
        });

        btn_search.setText("Search");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        txtAreaForSearchedWordsInfo.setColumns(20);
        txtAreaForSearchedWordsInfo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtAreaForSearchedWordsInfo.setRows(5);
        jScrollPane1.setViewportView(txtAreaForSearchedWordsInfo);

        btnFileChooser.setText("File Chooser");
        btnFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileChooserActionPerformed(evt);
            }
        });

        btnDeleteChoosenFiles.setText("Delete Chosen Files");
        btnDeleteChoosenFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteChoosenFilesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtField_searchWord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_search))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteChoosenFiles)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_preOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_inOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_postOrder))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDeleteChoosenFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtField_searchWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_search))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_inOrder)
                                .addComponent(btn_postOrder))
                            .addComponent(btn_preOrder))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileChooserActionPerformed
        
        JFileChooser fileChooser = new JFileChooser();

        fileChooser.setMultiSelectionEnabled(true);

        int result = fileChooser.showOpenDialog(null);

        tree = new bst();

        Set<String> ignoreList = new HashSet<>();

        try (BufferedReader reader = new BufferedReader(new FileReader("C:\\Users\\Beyza\\Desktop\\docs\\ignoreList.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                ignoreList.add(line.trim());
            }
        } catch (IOException e) {
            return;
        }

        Document doc = null;

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFiles = fileChooser.getSelectedFiles();
            for (File file : selectedFiles) {
                File input = new File(file.getAbsolutePath());

                try {
                    doc = Jsoup.parse(input, "UTF-8");
                } catch (IOException e) {
                    return;
                }
                String text = doc.text();

                for (String word : text.split("\\s+")) {
                    if (!ignoreList.contains(word)) {
                        tree.add(word, file.getName());
                    }
                }
            }

        }
    }//GEN-LAST:event_btnFileChooserActionPerformed

    private void btnDeleteChoosenFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteChoosenFilesActionPerformed
        for (int i = 0; i < selectedFiles.length; i++) {
            selectedFiles[i] = null;
        }


    }//GEN-LAST:event_btnDeleteChoosenFilesActionPerformed

    private void btn_preOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_preOrderActionPerformed
        txtArea_outputOrderedList.setText("");
        traversePreOrder(bst.root, txtArea_outputOrderedList);
    }//GEN-LAST:event_btn_preOrderActionPerformed

    private void traversePreOrder(bstNode node, JTextArea textArea) {
        if (node != null) {
            textArea.append(node.word + " : " + node.countSum() + "\n");
            traversePreOrder(node.left, textArea);
            traversePreOrder(node.right, textArea);
        }
    }

    private void btn_inOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inOrderActionPerformed
        txtArea_outputOrderedList.setText("");
        traverseInOrder(bst.root, txtArea_outputOrderedList);
    }//GEN-LAST:event_btn_inOrderActionPerformed

    private void traverseInOrder(bstNode node, JTextArea textArea) {
        if (node != null) {
            traverseInOrder(node.left, textArea);
            textArea.append(node.word + " : " + node.countSum() + "\n");
            traverseInOrder(node.right, textArea);
        }
    }

    private void btn_postOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_postOrderActionPerformed
        txtArea_outputOrderedList.setText("");
        traversePostOrder(bst.root, txtArea_outputOrderedList);
    }//GEN-LAST:event_btn_postOrderActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        String word = txtField_searchWord.getText();
        bstNode result = bst.search(word);
        if (result != null) {
            searchScreen(word, txtAreaForSearchedWordsInfo);
        } else {
            txtAreaForSearchedWordsInfo.append("Word not found");
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void searchScreen(String word, JTextArea textArea) {
        textArea.setText("");
        bstNode foundNode = bst.search(word);
    if (foundNode != null) {
        Node currentNode = foundNode.list.head;
        while (currentNode != null) {
            textArea.append(foundNode.word + " -> " + currentNode.fileName + " -> " + currentNode.count + "\n");
            currentNode = currentNode.next;
        }
    } else {
        textArea.append("Word not found");
    }
    }

    private void traversePostOrder(bstNode node, JTextArea textArea) {
        if (node != null) {
            traversePostOrder(node.left, textArea);
            traversePostOrder(node.right, textArea);
            textArea.append(node.word + " : " + node.countSum() + "\n");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guiForBST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new guiForBST().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteChoosenFiles;
    private javax.swing.JButton btnFileChooser;
    private javax.swing.JButton btn_inOrder;
    private javax.swing.JButton btn_postOrder;
    private javax.swing.JButton btn_preOrder;
    private javax.swing.JButton btn_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtAreaForSearchedWordsInfo;
    private javax.swing.JTextArea txtArea_outputOrderedList;
    private javax.swing.JTextField txtField_searchWord;
    // End of variables declaration//GEN-END:variables
}
